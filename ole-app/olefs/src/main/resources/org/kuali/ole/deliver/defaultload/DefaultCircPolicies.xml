<agendas>
    <agenda> <!--General Checks: rules to validate Patron (generalBlock, expiration date, address, barcode, and, if proxy, a rule for proxy expiration date check-->
        <name>General Checks</name>
        <rules>
            <rule> <!--GeneralBlock: if generalBlock=true then display error message-->
                <name>isGeneralBlock</name>
                <oleProposition> <!--if generalBlock=true-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>generalBlock</value>
                        </term>
                        <operator>=</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>true</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error message-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>This patron has a general block</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--PatronMembershipExpirationDate: if patron expiration date has past; if currentDateFunction (expirationDate) is true, then display error message-->
                <name>PatronMembershipExpirationDate</name>
                <oleProposition> <!--if currentDateFunction (expirationDate) is true-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>currentDateFunction</function>
                        <term>
                            <type>java.util.Date</type>
                            <value>expirationDate</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error message-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>The patron's record has expired.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Check Digit Routines For Patron: if digitRoutine = true AND patronBarCode = pattern, then display error message-->
                <name>Check Digit Routines For Patron</name>
                <oleProposition> <!--if digitRoutine = true AND patronBarCode = pattern-->
                    <type>compound</type>
                    <compoundProposition>
                        <operator>AND</operator>
                        <simpleProposition> <!--if digitRoutine = true-->
                            <term>
                                <type>java.lang.String</type>
                                <value>digitRoutine</value>
                            </term>
                            <operator>=</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>true</name>
                                </value>
                            </values>
                        </simpleProposition>
                        <simpleProposition> <!--if patronBarCode = pattern-->
                            <function>CheckDigitRoutine</function>
                            <term>
                                <type>java.lang.String</type>
                                <value>patronBarcode</value>
                            </term>
                            <term>
                                <type>java.lang.String</type>
                                <value>pattern</value>
                            </term>
                        </simpleProposition>
                    </compoundProposition>
                </oleProposition>
                <trueActions> <!--then display error message-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>The format of the patron's barcode is invalid.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Patron Proxy Check: if isProxyPatron = true, then (if currentDateFunction(proxyExpirationDate) = true then display error message)-->
                <name>ProxyVerification</name>
                <oleProposition> <!--if isProxyPatron = true-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>isProxyPatron</value>
                        </term>
                        <operator>=</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>true</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--patron proxy expiration date check : if currentDateFunction(proxyExpirationDate) = true then display error message-->
                        <name>PatronMembershipExpirationDateForProxy</name>
                        <oleProposition> <!--if currentDateFunction(proxyExpirationDate) = true-->
                            <type>simple</type>
                            <simpleProposition>
                                <function>currentDateFunction</function>
                                <term>
                                    <type>java.util.Date</type>
                                    <value>proxyExpirationDate</value>
                                </term>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--then display error message-->
                            <action>
                                <name>errorAction</name>
                                <parameter>
                                    <name>errorMessage</name>
                                    <value>The proxy record has expired.</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                    <rule> <!--PatronActivationDateValidation: if activationDate=future then display error message-->
                        <name>ProxyPatronActivationDateValidation</name>
                        <oleProposition> <!--if currentDateFunction(activationDate) = true-->
                            <type>simple</type>
                            <simpleProposition>
                                <function>currentDateFunction</function>
                                <term>
                                    <type>java.util.Date</type>
                                    <value>proxyActivationDate</value>
                                </term>
                            </simpleProposition>
                        </oleProposition>
                        <falseActions> <!--then display error message-->
                            <action>
                                <name>errorAction</name>
                                <parameter>
                                    <name>errorMessage</name>
                                    <value>The proxy patron record has future activation date.</value>
                                </parameter>
                            </action>
                        </falseActions>
                    </rule>
                    <rule> <!--isActiveProxyPatron: if activeProxyPatron=true then display error message-->
                        <name>isActiveProxyPatron</name>
                        <oleProposition> <!--if activePatron=true-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>activeProxyPatron</value>
                                </term>
                                <operator>=</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>false</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--then display error message-->
                            <action>
                                <name>errorAction</name>
                                <parameter>
                                    <name>errorMessage</name>
                                    <value>The proxy patron record is inactive.</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--isActivePatron: if activePatron=true then display error message-->
                <name>isActivePatron</name>
                <oleProposition> <!--if activePatron=true-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>activePatron</value>
                        </term>
                        <operator>=</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>false</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error message-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>The patron's record is inactive.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--PatronActivationDateValidation: if activationDate=future then display error message-->
                <name>PatronActivationDateValidation</name>
                <oleProposition> <!--if currentDateFunction(activationDate) = true-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>currentDateFunction</function>
                        <term>
                            <type>java.util.Date</type>
                            <value>activationDate</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <falseActions> <!--then display error message-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>The patron's record has future activation date.</value>
                        </parameter>
                    </action>
                </falseActions>
            </rule>
        </rules>
    </agenda>
    <agenda> <!--CheckOut Validation: rules to validate Item: loaned and lost statuses, Barcode, item location compared to circdesk locations. Contains sub rules for  check out policies based on combinations of Item and Patron characteristics; Policies set loan periods, and checks for existing 'claims', fines, limits on # of items checked out, and overdue-->
        <name>CheckOut Validation</name>
        <rules>
            <rule> <!--CheckOut Status Validation: if itemStatus=loaned, then display error, Else (if it's onhold for someone else, then display error)-->
                <name>CheckOut Status Validation</name>
                <oleProposition> <!--if itemStatus=Loaned-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemStatus</value>
                        </term>
                        <operator>=</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>LOANED</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>Item status is loaned</value>
                        </parameter>
                    </action>
                </trueActions>
                <falseActions>
                    <rule> <!--OnHold Status Validation: if patron != 1st position and requestType in (any hold or delivery type) and the itemstatus=OnHold, then display error 'onhold for someone else'-->
                        <name>OnHold Status Validation</name>
                        <oleProposition> <!--if isPatronInPositionOne=false AND requestType in (recall hold or delivery or page hold or delivery or hold/hold) AND if itemStatus=OnHold-->
                            <type>compound</type>
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition> <!--if isPatronInPositionOne=false-->
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>isPatronInPositionOne</value>
                                    </term>
                                    <operator>=</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>false</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                                <compoundProposition> <!--Rich (in consultation with Cheryl M) changed this section to a compound OR - if request (any but copy and in transit request) exists for the item OR the item is on hold.  We may remove the check for item hold status after we've determined when a hold request goes away. -->
                                    <operator>OR</operator>
                                    <simpleProposition> <!--if requestType in recall/hold, recall/delivery, page/hold, page/delivery, hold/hold-->
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>requestType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>Recall/Delivery Request</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>Recall/Hold Request</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>Hold/Delivery Request</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>Hold/Hold Request</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>Copy Request</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>In Transit Request</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                    <simpleProposition> <!--if itemStatus=OnHold-->
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>itemStatus</value>
                                        </term>
                                        <operator>=</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>ONHOLD</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </compoundProposition>
                            </compoundProposition>
                        </oleProposition>
                        <trueActions> <!--then display error onhold for another patron-->
                            <action>
                                <name>errorAction</name>
                                <parameter>
                                    <name>errorMessage</name>
                                    <value>Item has been requested by another patron.</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                </falseActions>
            </rule>
            <rule> <!--Lost Status Validation: if itemStatus=LOST, then display error-->
                <name>Lost Status Validation</name>
                <oleProposition> <!--if itemStatus=LOST-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemStatus</value>
                        </term>
                        <operator>=</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>LOST</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>Item status is Lost</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Check Digit Routines For Item: if digitRoutine=true AND if itemBarcode=pattern, then display error message item barcode invalid-->
                <name>Check Digit Routines For Item</name>
                <oleProposition> <!--if digitRoutine=true AND if itemBarcode=pattern-->
                    <type>compound</type>
                    <compoundProposition>
                        <operator>AND</operator>
                        <simpleProposition> <!--if digitRoutine=true-->
                            <term>
                                <type>java.lang.String</type>
                                <value>digitRoutine</value>
                            </term>
                            <operator>=</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>true</name>
                                </value>
                            </values>
                        </simpleProposition>
                        <simpleProposition> <!--if itemBarcode=pattern-->
                            <function>CheckDigitRoutine</function>
                            <term>
                                <type>java.lang.String</type>
                                <value>itemBarcode</value>
                            </term>
                            <term>
                                <type>java.lang.String</type>
                                <value>pattern</value>
                            </term>
                        </simpleProposition>
                    </compoundProposition>
                </oleProposition>
                <trueActions> <!--then dispaly error message item barcode invalid-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>The format of the item barcode is invalid</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Circulation Policy Set 1 Validation: if circpolicyFound = isCircPolicyNotFound, then run the policy rules-->
                <name>Circulation Policy Set 50-Day Validation</name>
                <oleProposition> <!--if circpolicyFound = isCircPolicyNotFound-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> 
                        <name>Check out Circulation Policy Set 50-Day</name> <!--Chicago most common combo; normal circulation for all Library locations, except one itemShelving location-->
                        <oleProposition> <!--check borrowerType, itemType, and itemLibrary-->
                            <type>compound</type>
                            <compoundProposition>
								<operator>AND</operator>
								<simpleProposition> 
									<term>
										<type>java.lang.String</type>
										<value>borrowerType</value>
									</term>
									<operator>IN</operator>
									<values>
										<value>
											<type>java.lang.String</type>
											<name>UGRAD</name>
										</value>
										<value>
											<type>java.lang.String</type>
											<name>GRAD</name>
										</value>
										<value>
											<type>java.lang.String</type>
											<name>FAC</name>
										</value>
										<value>
											<type>java.lang.String</type>
											<name>STAFF</name>
										</value>
										<value>
											<type>java.lang.String</type>
											<name>ALUM</name>
										</value>
										<value>
											<type>java.lang.String</type>
											<name>GUEST</name>
										</value>
									</values>
								</simpleProposition>
								<simpleProposition> 
									<term>
										<type>java.lang.String</type>
										<value>itemType</value>
									</term>
									<operator>IN</operator>
									<values>
										<value>
											<type>java.lang.String</type>
											<name>BOOK</name>
										</value>
										<value>
											<type>java.lang.String</type>
											<name>AV</name>
										</value>
								   </values>
								</simpleProposition>

                            </compoundProposition>
                        </oleProposition>
                        <trueActions>
                            <action> <!--then policyfound = true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> <!--then loanPeriod=50-Day-->
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>50-D</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay=3650 -->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay=500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> <!--then run Check all Overdue fine amount: if overdue fine exceeds 5, then display error-->
                                <name>Check all Overdue fine amount 50-Day</name>
                                <oleProposition> <!--if overdue fine exceeds 150-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt:if replacement fee greater than 10, then display error-->
                                <name>Check Replacement fee amt 50-Day</name>
                                <oleProposition> <!--if replacement fee greater than 10-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has replacement fees in excess of $100</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges: if allcharges >150, then display error-->
                                <name>Check Overall Charges 50-Day</name>
                                <oleProposition> <!--if allcharges >150-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron's overall charges exceed $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run BorrowerLimitForCheckedOutOverdueItems: if numberOfOverdueItemsCheckedOut>2, then display error-->
                                <name>BorrowerLimitForCheckedOutOverdueItems 50-Day</name>
                                <oleProposition> <!--if numberOfOverdueItemsCheckedOut>2-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfOverDueItemsCheckedOut</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>20</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than 20 items overdue.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
							
                            <rule> <!--then run BorrowerLimitForCheckedOutOverdueRecalledItems: if numberOfOverdueRecalledItemsCheckedOut>1, then display error-->
                                <name>BorrowerLimitForCheckedOutOverdueRecalledItems 50-Day</name>
                                <oleProposition> <!--if numberOfOverdueRecalledItemsCheckedOut>1-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfOverDueRecalledItemsCheckedOut</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>10</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than 10 overdue recalled items.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                        </trueActions>
						
						<falseActions> <!--then display error message-->
                            <action>
                                <name>errorAction</name>
                                <parameter>
                                    <name>errorMessage</name>
                                    <value>Selected Borrower cannot be loaned selected item type.</value>
                                </parameter>
                            </action>
                        </falseActions>
						
                    </rule>
                </trueActions>
            </rule>

			<rule> <!--Circulation Policy Set 11 Validation - Do Not Circulate May Have An Exception Added Later --> 
                <name>Circulation Policy Set NonCirc Validation</name> <!-- -->
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> 
                        <name>Check out Circulation Policy Set NonCirc</name>
                        <oleProposition>
                            <type>compound</type>

                                    <compoundProposition>
                                        <operator>AND</operator>
                                        <simpleProposition> 
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>borrowerType</value>
                                            </term>
                                            <operator>IN</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>FAC</name>
                                                </value>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>STAFF</name>
                                                </value>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>GRAD</name>
                                                </value>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>UGRAD</name>
                                                </value>                                
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition> 
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>itemType</value>
                                            </term>
                                            <operator>IN</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>NONCIRC</name>
                                                </value>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>PERIOD</name>
                                                </value>
												<value>
                                                    <type>java.lang.String</type>
                                                    <name>UNKNOWN</name>
                                                </value>
                                            </values>
                                        </simpleProposition>

                                    </compoundProposition>   
  
                        </oleProposition>
                        <trueActions>
                            <action> <!--then circpolicyfound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action>
                                <name>errorAction</name>
                                <parameter>
                                    <name>errorMessage</name>
                                    <value>NonCirc items, may not be checked out</value>
                                </parameter>
                            </action>         
                </trueActions>
                    </rule>       
                    </trueActions>       
            </rule>
            <rule> <!--if none of the above policies fit combination of item and patron, display the policy not found message-->
                <name>Check out Circulation Policy Not Found</name>
                <oleProposition>
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>There is no circulation rule for this combination</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
        </rules>
    </agenda>
    <agenda> <!--Renewal: rules to validate Item (barcode check); compare item location to circDesk locations. Contains sub rule for renewal policy based on item and patron combinations of item and Patron characteristics; Policies set loan periods, checks on patron claims, fines, number of times renewed-->
        <name>Renewal Validation</name> <!-- Chicago took out the circulation desk validation; we don't care if items are renewed at a different location than where checked out -->
        <rules>
            <rule> <!-- Renewal Item Type Validation -->
                <name>Item Type Validation for Renewal</name> <!--the following item types can not be renewed-->
                <oleProposition> 
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemType</value>
                        </term>
                        <operator>IN</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>PALCI</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>KEY</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>LAPTOP</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>VIDEO</name>
                            </value>

                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>PALCI, Laptop, Video, and Key loans may not be renewed</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--then run IndefiniteCheck: if itemDueDateString=null, then display error-->
                <name>IndefiniteCheck</name>
                <oleProposition> <!--if itemDueDateString=null-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemDueDateString</value>
                        </term>
                        <operator>=</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>null</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>Items on indefinite loan do not need to be renewed.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Renewal Check Digit Routines For Item: if digitRoutine=true AND CheckDigitRoutine(pattern), then display error-->
                <name>Renewal Check Digit Routines For Item</name>
                <oleProposition> <!--if digitRoutine=true AND CheckDigitRoutine(pattern)-->
                    <type>compound</type>
                    <compoundProposition>
                        <operator>AND</operator>
                        <simpleProposition> <!--if digitRoutine=true-->
                            <term>
                                <type>java.lang.String</type>
                                <value>digitRoutine</value>
                            </term>
                            <operator>=</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>true</name>
                                </value>
                            </values>
                        </simpleProposition>
                        <simpleProposition> <!--if CheckDigitRoutine(pattern)-->
                            <function>CheckDigitRoutine</function>
                            <term>
                                <type>java.lang.String</type>
                                <value>itemBarcode</value>
                            </term>
                            <term>
                                <type>java.lang.String</type>
                                <value>pattern</value>
                            </term>
                        </simpleProposition>
                    </compoundProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>The format of the item barcode is invalid</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            
            <rule> <!--Circulation Policy Set 1 Validation for Renewal: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then -->
                <name>Circulation Policy Set 1 Validation for Renewal</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Renewal Circulation Policy Set 1-->
                        <name>Renewal Circulation Policy Set 50-Day</name>
                        <oleProposition> <!--check borrowerType, itemType, and itemLibrary-->
                            <type>compound</type>
                            <compoundProposition>
                                <operator>OR</operator>
                                
                                <compoundProposition>
                                    <operator>AND</operator>
                                    <simpleProposition> 
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>borrowerType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>UGRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>ILL</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SPOUSE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>OTHER</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                    <simpleProposition> 
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>itemType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>BOOK</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>BOOK_ZML</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SCORE_ZML</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>CHAMBERZML</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                    
                                </compoundProposition>   
                                
                                <compoundProposition>
                                    <operator>AND</operator>
                                    <simpleProposition> 
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>borrowerType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>FACULTY</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>STAFF</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>GRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>UGRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SPOUSE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>OTHER</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                    <simpleProposition> 
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>itemType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>CURRICULUM</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>EREADACCES</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>EREADER</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>JUVENILE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>LEISURE-RD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>TABLET</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </compoundProposition>
                                
                            </compoundProposition>
                        </oleProposition>
                        <trueActions> 
                            <action> <!--then circulationPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> 
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>50-D</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay = 3650-->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay = 500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> 
                                <name>Check all Overdue fine amount for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt for Renewal: if replacementFeeAmt greater than 75, then display error-->
                                <name>Check Replacement fee amt for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $100 in Replacement Fee Charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges for Renewal:then display error-->
                                <name>Check Overall Charges for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $150 in overall charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run RenewalLimit: if numberofRenewals > 5, then display error-->
                                <name>RenewalLimit</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfRenewals</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>5</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>The item has been renewed the maximum (5) number of times.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>

                            <rule> <!--then run FixedDueDateCheck: if currentDateFunction(itemDueDate), then overdueFine = 10/H, then maxFine = 100, else display error-->
                                <name>FixedDueDateCheck</name>
                                <oleProposition> <!--if currentDateFunction(itemDueDate)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <!--TrueAction: Set Fine/Fees if Applicable-->  
                                <falseActions>
                                    <rule> <!--then run renewalDateCheck: if renewalDateCheck(itemDueDate), then  display error-->
                                        <name>renewalDateCheck</name>
                                        <oleProposition> <!--if renewalDateCheck(itemDueDate)-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <function>renewalDateFunction</function>
                                                <term>
                                                    <type>java.util.Date</type>
                                                    <value>itemDueDate</value>
                                                </term>
                                            </simpleProposition>
                                        </oleProposition>
                                        <falseActions>
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>Due to a change in policy, the new due date/time is prior to the current due date/time. Click Do not Renew to leave the current due date/time or click Renew for the earlier date.</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </falseActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Circulation Policy Set 3 Validation for Renewal: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then -->
                <name>Circulation Policy Set 3 Validation for Renewal</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Renewal Circulation Policy Set 3-->
                        <name>Renewal Circulation Policy Set 2-Hour</name>
                        <oleProposition>
                            <type>compound</type>
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>FACULTY</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>STAFF</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>GRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>UGRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SPOUSE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>OTHER</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LIBRARYUSE</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>2-HOUR-RSV</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                                
                            </compoundProposition>
                        </oleProposition>
                        <trueActions> 
                            <action> <!--then circulationPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> 
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>2-H</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay = 3650-->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay = 500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> 
                                <name>Check all Overdue fine amount for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt for Renewal: if replacementFeeAmt greater than 75, then display error-->
                                <name>Check Replacement fee amt for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $100 in Replacement Fee Charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges for Renewal:then display error-->
                                <name>Check Overall Charges for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $150 in overall charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run RenewalLimit: if numberofRenewals > 1 (Reserve Items only allow one renewal), then display error-->
                                <name>RenewalLimit</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfRenewals</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>1</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>The item has been renewed the maximum (1) number of times.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>

                            <rule> <!--then run FixedDueDateCheck: if currentDateFunction(itemDueDate), then overdueFine = 10/H, then maxFine = 100, else display error-->
                                <name>FixedDueDateCheck</name>
                                <oleProposition> <!--if currentDateFunction(itemDueDate)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <!--TrueAction: Set Fine/Fees if Applicable-->  
                                
                                <falseActions>
                                    <rule> <!--then run renewalDateCheck: if renewalDateCheck(itemDueDate), then  display error-->
                                        <name>renewalDateCheck</name>
                                        <oleProposition> <!--if renewalDateCheck(itemDueDate)-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <function>renewalDateFunction</function>
                                                <term>
                                                    <type>java.util.Date</type>
                                                    <value>itemDueDate</value>
                                                </term>
                                            </simpleProposition>
                                        </oleProposition>
                                        <falseActions>
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>Due to a change in policy, the new due date/time is prior to the current due date/time. Click Do not Renew to leave the current due date/time or click Renew for the earlier date.</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </falseActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Circulation Policy Set 4 Validation for Renewal: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then -->
                <name>Circulation Policy Set 4 Validation for Renewal</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Renewal Circulation Policy Set 4-->
                        <name>Renewal Circulation Policy Set 4-Hour</name>
                        <oleProposition>
                            <type>compound</type>
                            <compoundProposition>
                                <operator>OR</operator>
                                
                                <compoundProposition>
                                    <operator>AND</operator>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>borrowerType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>FACULTY</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>STAFF</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>GRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>UGRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SPOUSE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>OTHER</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>LIBRARYUSE</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>itemType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>4-HOUR-RSV</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>KEY</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>LAP_ACCESS</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>LAPTOP</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>AV-MISC</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>AV-EQUIP</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>VID-PLAYER</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </compoundProposition>
                                <compoundProposition>
                                    <operator>AND</operator>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>borrowerType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>UGRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>OTHER</name>
                                            </value>
                                            
                                        </values>
                                    </simpleProposition>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>itemType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>AUDIO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>BOOKWARE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>CD-AUDIO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>CD-INFO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>DVD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>FILM</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SOFTWARE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>VIDEO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>VIDEO_ZML</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>VIDEOGUIDE</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </compoundProposition>    
                            </compoundProposition>
                        </oleProposition>
                        <trueActions> 
                            <action> <!--then circulationPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> 
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>4-H</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay = 3650-->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay = 500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> 
                                <name>Check all Overdue fine amount for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt for Renewal: if replacementFeeAmt greater than 75, then display error-->
                                <name>Check Replacement fee amt for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $100 in Replacement Fee Charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges for Renewal:then display error-->
                                <name>Check Overall Charges for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $150 in overall charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run RenewalLimit: if numberofRenewals > 1 (Reserve Items only allow one renewal), then display error-->
                                <name>RenewalLimit</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfRenewals</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>1</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>The item has been renewed the maximum (1) number of times.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            
                            <rule> <!--then run FixedDueDateCheck: if currentDateFunction(itemDueDate), then overdueFine = 10/H, then maxFine = 100, else display error-->
                                <name>FixedDueDateCheck</name>
                                <oleProposition> <!--if currentDateFunction(itemDueDate)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <!--TrueAction: Set Fine/Fees if Applicable-->  
                                
                                <falseActions>
                                    <rule> <!--then run renewalDateCheck: if renewalDateCheck(itemDueDate), then  display error-->
                                        <name>renewalDateCheck</name>
                                        <oleProposition> <!--if renewalDateCheck(itemDueDate)-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <function>renewalDateFunction</function>
                                                <term>
                                                    <type>java.util.Date</type>
                                                    <value>itemDueDate</value>
                                                </term>
                                            </simpleProposition>
                                        </oleProposition>
                                        <falseActions>
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>Due to a change in policy, the new due date/time is prior to the current due date/time. Click Do not Renew to leave the current due date/time or click Renew for the earlier date.</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </falseActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Circulation Policy Set 6 Validation for Renewal: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then -->
                <name>Circulation Policy Set 6 Validation for Renewal</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Renewal Circulation Policy Set 6-->
                        <name>Renewal Circulation Policy Set 2-Day</name>
                        <oleProposition>
                            <type>compound</type>
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>FACULTY</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>STAFF</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>GRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>UGRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SPOUSE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>OTHER</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LIBRARYUSE</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>2-DAY-RSV</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                                
                            </compoundProposition>
                        </oleProposition>
                        <trueActions> 
                            <action> <!--then circulationPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> 
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>2-D</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay = 3650-->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay = 500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> 
                                <name>Check all Overdue fine amount for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt for Renewal: if replacementFeeAmt greater than 75, then display error-->
                                <name>Check Replacement fee amt for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $100 in Replacement Fee Charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges for Renewal:then display error-->
                                <name>Check Overall Charges for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $150 in overall charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run RenewalLimit: if numberofRenewals > 1 (Reserve Items only allow one renewal), then display error-->
                                <name>RenewalLimit</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfRenewals</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>1</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>The item has been renewed the maximum (1) number of times.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            
                            <rule> <!--then run FixedDueDateCheck: if currentDateFunction(itemDueDate), then overdueFine = 10/H, then maxFine = 100, else display error-->
                                <name>FixedDueDateCheck</name>
                                <oleProposition> <!--if currentDateFunction(itemDueDate)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <!--TrueAction: Set Fine/Fees if Applicable-->  
                                
                                <falseActions>
                                    <rule> <!--then run renewalDateCheck: if renewalDateCheck(itemDueDate), then  display error-->
                                        <name>renewalDateCheck</name>
                                        <oleProposition> <!--if renewalDateCheck(itemDueDate)-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <function>renewalDateFunction</function>
                                                <term>
                                                    <type>java.util.Date</type>
                                                    <value>itemDueDate</value>
                                                </term>
                                            </simpleProposition>
                                        </oleProposition>
                                        <falseActions>
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>Due to a change in policy, the new due date/time is prior to the current due date/time. Click Do not Renew to leave the current due date/time or click Renew for the earlier date.</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </falseActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Circulation Policy Set 7 Validation for Renewal: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then -->
                <name>Circulation Policy Set 7 Validation for Renewal</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Renewal Circulation Policy Set 7-->
                        <name>Renewal Circulation Policy Set 7-Day</name>
                        <oleProposition>
                            <type>compound</type>
                            <compoundProposition>
                                <operator>OR</operator>
                                
                                <compoundProposition>
                                    <operator>AND</operator>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>borrowerType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>FACULTY</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>STAFF</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>GRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>UGRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SPOUSE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>OTHER</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>LIBRARYUSE</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>itemType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>7-DAY-RSV</name>
                                            </value>                                           
                                        </values>
                                    </simpleProposition>
                                </compoundProposition>
                                <compoundProposition>
                                    <operator>AND</operator>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>borrowerType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>FACULTY</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>STAFF</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>GRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SPOUSE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>LIBRARYUSE</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>itemType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>AUDIO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>BOOKWARE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>CD-AUDIO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>CD-INFO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>DVD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>FILM</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SOFTWARE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>VIDEO</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>VIDEO_ZML</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>VIDEOGUIDE</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </compoundProposition>
                            </compoundProposition>
                        </oleProposition>
                        <trueActions> 
                            <action> <!--then circulationPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> 
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>7-D</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay = 3650-->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay = 500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> 
                                <name>Check all Overdue fine amount for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt for Renewal: if replacementFeeAmt greater than 75, then display error-->
                                <name>Check Replacement fee amt for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $100 in Replacement Fee Charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges for Renewal:then display error-->
                                <name>Check Overall Charges for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $150 in overall charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run RenewalLimit: if numberofRenewals > 1 (Reserve Items only allow one renewal), then display error-->
                                <name>RenewalLimit</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfRenewals</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>1</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>The item has been renewed the maximum (1) number of times.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            
                            <rule> <!--then run FixedDueDateCheck: if currentDateFunction(itemDueDate), then overdueFine = 10/H, then maxFine = 100, else display error-->
                                <name>FixedDueDateCheck</name>
                                <oleProposition> <!--if currentDateFunction(itemDueDate)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <!--TrueAction: Set Fine/Fees if Applicable-->  
                                
                                <falseActions>
                                    <rule> <!--then run renewalDateCheck: if renewalDateCheck(itemDueDate), then  display error-->
                                        <name>renewalDateCheck</name>
                                        <oleProposition> <!--if renewalDateCheck(itemDueDate)-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <function>renewalDateFunction</function>
                                                <term>
                                                    <type>java.util.Date</type>
                                                    <value>itemDueDate</value>
                                                </term>
                                            </simpleProposition>
                                        </oleProposition>
                                        <falseActions>
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>Due to a change in policy, the new due date/time is prior to the current due date/time. Click Do not Renew to leave the current due date/time or click Renew for the earlier date.</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </falseActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Circulation Policy Set 8 Validation for Renewal: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then -->
                <name>Circulation Policy Set 8 Validation for Renewal</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Renewal Circulation Policy Set 8-->
                        <name>Renewal Circulation Policy Set 180-Day</name>
                        <oleProposition>
                            <type>compound</type>
                            
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>GRAD</name>
                                        </value>
                                        
                                    </values>
                                </simpleProposition>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SCORE_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CHAMBERZML</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                            </compoundProposition>
                            
                        </oleProposition>
                        <trueActions> 
                            <action> <!--then circulationPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> 
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>180-D</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay = 3650-->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay = 500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> 
                                <name>Check all Overdue fine amount for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt for Renewal: if replacementFeeAmt greater than 75, then display error-->
                                <name>Check Replacement fee amt for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $100 in Replacement Fee Charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges for Renewal:then display error-->
                                <name>Check Overall Charges for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $150 in overall charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run RenewalLimit: if numberofRenewals > 5, then display error-->
                                <name>RenewalLimit</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfRenewals</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>5</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>The item has been renewed the maximum (5) number of times.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>

                            <rule> <!--then run FixedDueDateCheck: if currentDateFunction(itemDueDate), then overdueFine = 10/H, then maxFine = 100, else display error-->
                                <name>FixedDueDateCheck</name>
                                <oleProposition> <!--if currentDateFunction(itemDueDate)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <!--TrueAction: Set Fine/Fees if Applicable-->  
                                
                                <falseActions>
                                    <rule> <!--then run renewalDateCheck: if renewalDateCheck(itemDueDate), then  display error-->
                                        <name>renewalDateCheck</name>
                                        <oleProposition> <!--if renewalDateCheck(itemDueDate)-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <function>renewalDateFunction</function>
                                                <term>
                                                    <type>java.util.Date</type>
                                                    <value>itemDueDate</value>
                                                </term>
                                            </simpleProposition>
                                        </oleProposition>
                                        <falseActions>
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>Due to a change in policy, the new due date/time is prior to the current due date/time. Click Do not Renew to leave the current due date/time or click Renew for the earlier date.</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </falseActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Circulation Policy Set 9 Validation for Renewal: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then -->
                <name>Circulation Policy Set 9 Validation for Renewal</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Renewal Circulation Policy Set 9-->
                        <name>Renewal Circulation Policy Set 365-Day</name>
                        <oleProposition>
                            <type>compound</type>
                            
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>FACULTY</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>STAFF</name>
                                        </value>
                                        
                                    </values>
                                </simpleProposition>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SCORE_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CHAMBERZML</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                            </compoundProposition>
                            
                        </oleProposition>
                        <trueActions> 
                            <action> <!--then circulationPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> 
                                <name>loanPeriod</name>
                                <parameter>
                                    <name>loanPeriod</name>
                                    <value>365-D</value>
                                </parameter>
                            </action>
                            <action> <!--then overdueDay = 3650-->
                                <name>overdueDay</name>
                                <parameter>
                                    <name>overdueDay</name>
                                    <value>3650</value>
                                </parameter>
                            </action>
                            <action> <!--then recallOverdueDay = 500-->
                                <name>recallOverdueDay</name>
                                <parameter>
                                    <name>recallOverdueDay</name>
                                    <value>500</value>
                                </parameter>
                            </action>
                            
                            <rule> 
                                <name>Check all Overdue fine amount for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>overdueFineAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has overdue fines in excess of $150</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Replacement fee amt for Renewal: if replacementFeeAmt greater than 75, then display error-->
                                <name>Check Replacement fee amt for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>replacementFeeAmt</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>100</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $100 in Replacement Fee Charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run Check Overall Charges for Renewal:then display error-->
                                <name>Check Overall Charges for Renewal</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>allCharges</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>150</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Patron has more than $150 in overall charges.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--then run RenewalLimit: if numberofRenewals > 5, then display error-->
                                <name>RenewalLimit</name>
                                <oleProposition> 
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>numberOfRenewals</value>
                                        </term>
                                        <operator>greaterThan</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>5</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> <!--then display error-->
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>The item has been renewed the maximum (5) number of times.</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            
                            <rule> <!--then run FixedDueDateCheck: if currentDateFunction(itemDueDate), then overdueFine = 10/H, then maxFine = 100, else display error-->
                                <name>FixedDueDateCheck</name>
                                <oleProposition> <!--if currentDateFunction(itemDueDate)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <!--TrueAction: Set Fine/Fees if Applicable-->  
                                
                                <falseActions>
                                    <rule> <!--then run renewalDateCheck: if renewalDateCheck(itemDueDate), then  display error-->
                                        <name>renewalDateCheck</name>
                                        <oleProposition> <!--if renewalDateCheck(itemDueDate)-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <function>renewalDateFunction</function>
                                                <term>
                                                    <type>java.util.Date</type>
                                                    <value>itemDueDate</value>
                                                </term>
                                            </simpleProposition>
                                        </oleProposition>
                                        <falseActions>
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>Due to a change in policy, the new due date/time is prior to the current due date/time. Click Do not Renew to leave the current due date/time or click Renew for the earlier date.</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </falseActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Renewal Circulation Policy Not Found: if circulationPolicyFoundFunction(isCirculationPolicyNotFound), then display error-->
                <name>Renewal Circulation Policy Not Found</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>There is no circulation rule for this combination.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
        </rules>

    </agenda>
    <agenda> <!--Check-in: rules to validate Item; barcode check; checks based on item status (in transit; intransit for hold; intransit for staff request) and setting new status; checks for requests against the item and setting new statuses; Contains sub rules for check in policies based on combined characteristics of item and patron; Policies set "lost" and overdue penalties-->
        <name>Check-in Validation</name>
        <rules>
            <rule> <!--BarCode Validation; if digitRoutine=true AND CheckDigitRoutine(itemBarcode, pattern), then display error-->
                <name>Check Digit Routines For Check-in Item</name>
                <oleProposition> <!--if digitRoutine=true AND CheckDigitRoutine(itemBarcode, pattern)-->
                    <type>compound</type>
                    <compoundProposition>
                        <operator>AND</operator>
                        <simpleProposition> <!--if digitRoutine=true-->
                            <term>
                                <type>java.lang.String</type>
                                <value>digitRoutine</value>
                            </term>
                            <operator>=</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>true</name>
                                </value>
                            </values>
                        </simpleProposition>
                        <simpleProposition> <!--if CheckDigitRoutine(itemBarcode, pattern)-->
                            <function>CheckDigitRoutine</function>
                            <term>
                                <type>java.lang.String</type>
                                <value>itemBarcode</value>
                            </term>
                            <term>
                                <type>java.lang.String</type>
                                <value>pattern</value>
                            </term>
                        </simpleProposition>
                    </compoundProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>The format of the item's barcode is invalid</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--InTransitCheck; if containsFunction(itemlocation, operatorsCirculationLocation), then (if itemstatus in (intransit), then itemstatus = AVAILABLE, else (if shelvingLagTime > 0, then updateItemStatus=Recently-Returned, Else updateItemStatus = Available)), else updateItemStatus = INTRANSIT-->
                <name>InTransitCheck</name>
                <oleProposition> <!--if containsFunction(itemlocation, operatorsCirculationLocation)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>containsFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemLocation</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>operatorsCirculationLocation</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then (run rule Recently returned Check based on inTransit: if shelvingLagTime > 0, then updateItemStatus=Recently-Returned, Else  updateItemStatus = Available)-->
                    <rule> <!--Recently returned Check based on inTransit: if shelvingLagTime > 0, then updateItemStatus=Recently-Returned, Else updateItemStatus = Available-->
                        <name>Recently returned Check based on inTransit</name>
                        <oleProposition> <!--if shelvingLagTime > 0-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.Integer</type>
                                    <value>shelvingLagTime</value>
                                </term>
                                <operator>greaterThan</operator>
                                <values>
                                    <value>
                                        <type>java.lang.Integer</type>
                                        <name>0</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--then updateItemStatus=Recently-Returned-->
                            <action>
                                <name>updateItemStatus</name>
                                <parameter>
                                    <name>updateItemStatus</name>
                                    <value>RECENTLY-RETURNED</value>
                                </parameter>
                            </action>
                        </trueActions>
                        <falseActions> <!--else updateItemStatus = Available-->
                            <action>
                                <name>updateItemStatus</name>
                                <parameter>
                                    <name>updateItemStatus</name>
                                    <value>AVAILABLE</value>
                                </parameter>
                            </action>
                        </falseActions>
                    </rule>
                </trueActions>
                <falseActions> <!--else updateItemStatus = INTRANSIT-->
                    <action>
                        <name>updateItemStatus</name>
                        <parameter>
                            <name>updateItemStatus</name>
                            <value>INTRANSIT</value>
                        </parameter>
                    </action>
                </falseActions>
            </rule>
            <rule> <!--OnHoldInPickupLocation: if containsFunction(itemPickupLocation, operatorsCirculationLocation) AND itemStatus in (INTRANSIT-FOR-HOLD) then updateItemStatus to ONHOLD-->
                <name>OnHoldInPickupLocation</name>
                <oleProposition> <!--if containsFunction(itemPickupLocation, operatorsCirculationLocation) AND itemStatus in (INTRANSIT-FOR-HOLD)-->
                    <type>compound</type>
                    <compoundProposition>
                        <operator>AND</operator>
                        <simpleProposition> <!--if containsFunction(itemPickupLocation, operatorsCirculationLocation)-->
                            <function>containsFunction</function>
                            <term>
                                <type>java.lang.String</type>
                                <value>itemPickUpLocation</value>
                            </term>
                            <term>
                                <type>java.lang.String</type>
                                <value>operatorsCirculationLocation</value>
                            </term>
                        </simpleProposition>
                        <simpleProposition> <!--if itemStatus in (INTRANSIT-FOR-HOLD)-->
                            <term>
                                <type>java.lang.String</type>
                                <value>itemStatus</value>
                            </term>
                            <operator>IN</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>INTRANSIT-FOR-HOLD</name>
                                </value>
                            </values>
                        </simpleProposition>
                    </compoundProposition>
                </oleProposition>
                <trueActions> <!--then updateItemStatus to ONHOLD-->
                    <action>
                        <name>updateItemStatus</name>
                        <parameter>
                            <name>updateItemStatus</name>
                            <value>ONHOLD</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--(StaffRequest)NotCheckedOut: if containsFunction(destinationLocation), [a circulation desk selected by the staff person and does not need to be a 'pickup location' circdesk] operatorsCirculationLocation) AND itemStatus in (Intransit-Per-Staff-Request), then run rule 'Recently returned Check based on Staff'-->
                <name>NotCheckedOut</name>
                <oleProposition> <!--if containsFunction(destinationLocation, operatorsCirculationLocation) AND itemStatus in (Intransit-Per-Staff-Request)-->
                    <type>compound</type>
                    <compoundProposition>
                        <operator>AND</operator>
                        <simpleProposition> <!--if containsFunction(destinationLocation, operatorsCirculationLocation)-->
                            <function>containsFunction</function>
                            <term>
                                <type>java.lang.String</type>
                                <value>destinationLocation</value>
                            </term>
                            <term>
                                <type>java.lang.String</type>
                                <value>operatorsCirculationLocation</value>
                            </term>
                        </simpleProposition>
                        <simpleProposition> <!--if itemStatus in (Intransit-Per-Staff-Request)-->
                            <term>
                                <type>java.lang.String</type>
                                <value>itemStatus</value>
                            </term>
                            <operator>IN</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>INTRANSIT-PER-STAFF-REQUEST</name>
                                </value>
                            </values>
                        </simpleProposition>
                    </compoundProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--Recently returned Check based on staff: if shelvingLagTime > 0, then updateItemStatus = Recently-Returned, else updateItemStatus = Available-->
                        <name>Recently returned Check based on staff</name>
                        <oleProposition> <!--if shelvingLagTime > 0-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.Integer</type>
                                    <value>shelvingLagTime</value>
                                </term>
                                <operator>greaterThan</operator>
                                <values>
                                    <value>
                                        <type>java.lang.Integer</type>
                                        <name>0</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--then updateItemStatus = Recently-Returned-->
                            <action>
                                <name>updateItemStatus</name>
                                <parameter>
                                    <name>updateItemStatus</name>
                                    <value>RECENTLY-RETURNED</value>
                                </parameter>
                            </action>
                        </trueActions>
                        <falseActions> <!--else updateItemStatus = Available-->
                            <action>
                                <name>updateItemStatus</name>
                                <parameter>
                                    <name>updateItemStatus</name>
                                    <value>AVAILABLE</value>
                                </parameter>
                            </action>
                        </falseActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--DeliveryRequest: if requestType in (Recall/Delivery Request, Hold/Delivery Request),then checkout = content for mail-->
                <name>DeliveryRequest</name>
                <oleProposition> <!--if requestType in (Recall/Delivery Request, Hold/Delivery Request)-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>requestType</value>
                        </term>
                        <operator>IN</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>Recall/Delivery Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Hold/Delivery Request</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then checkout = content for mail-->
                    <action>
                        <name>checkout</name>
                        <parameter>
                            <name>checkout</name>
                            <value>Content for mail</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Request Exists Check: if requestType in (Recall/Delivery Request, Hold/Delivery Request,Recall/Hold Request,Hold/Hold Request,Page/Hold Request),then display error-->
                <name>Request Exists Check</name>
                <oleProposition> <!--if requestType in (Recall/Delivery Request, Hold/Delivery Request,Recall/Hold Request,Hold/Hold Request,Page/Hold Request)-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>requestType</value>
                        </term>
                        <operator>IN</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>Recall/Delivery Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Hold/Delivery Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Recall/Hold Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Hold/Hold Request</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error-->
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>Request Exists for this Item</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--HoldRequest: if requestType in (Recall/Hold Request, Hold/Hold Request, Page/Hold Request), then run rule LocationCheck-->
                <name>HoldRequest</name>
                <oleProposition> <!--if requestType in (Recall/Hold Request, Hold/Hold Request, Page/Hold Request)-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>requestType</value>
                        </term>
                        <operator>IN</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>Recall/Hold Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Hold/Hold Request</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--run rule LocationCheck-->
                    <rule> <!--if containsFunction(itemPickUpLocation, operatorsCirculationLocation), then updateItemStatus = onhold, else updateItemStatus = Intransit-For-Hold-->
                        <name>LocationCheck</name>
                        <oleProposition> <!--if containsFunction(itemPickUpLocation, operatorsCirculationLocation)-->
                            <type>simple</type>
                            <simpleProposition>
                                <function>containsFunction</function>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>itemPickUpLocation</value>
                                </term>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>operatorsCirculationLocation</value>
                                </term>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--then updateItemStatus = onhold-->
                            <action>
                                <name>updateItemStatus</name>
                                <parameter>
                                    <name>updateItemStatus</name>
                                    <value>ONHOLD</value>
                                </parameter>
                            </action>
                        </trueActions>
                        <falseActions> <!--else updateItemStatus = Intransit-For-Hold-->
                            <action>
                                <name>updateItemStatus</name>
                                <parameter>
                                    <name>updateItemStatus</name>
                                    <value>INTRANSIT-FOR-HOLD</value>
                                </parameter>
                            </action>
                        </falseActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--NO Fine Validation for CheckIN: if-->                
                <name>Circulation Policy Set No Fine Validation for CheckIn</name> <!--Indefinite Borrowers and Library Departments-->
                <oleProposition> <!--if circpolicyFound = isCircPolicyNotFound, then run the policy rules-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> 
                        <name>Check In Circulation Policy Set No Fine</name>
                        <oleProposition> <!--check borrowerType, itemType, and itemLibrary-->
                            <type>compound</type>
                            <compoundProposition>
                                <operator>OR</operator>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LIBRARYUSE</name>
                                        </value>
                                        
                                    </values>
                                </simpleProposition>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SCORE_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CHAMBERZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>2-HOUR-RSV</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>4-HOUR-RSV</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>1-DAY-RSV</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>7-DAY-RSV</name>
                                        </value>                                        
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CURRICULUM</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>JUVENILE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LEISURE-RD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>KEY</name>
                                        </value>
                                        
                                    </values>
                                </simpleProposition>
                            </compoundProposition>
                        </oleProposition>
                        <trueActions>
                            <action> <!--then policyfound = true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            
                        </trueActions>
                        
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Daily Fine Validation for CheckIN: if-->
                <name>Circulation Policy Set Daily Fine Validation for CheckIn</name>
                <oleProposition> <!--if circulationPolicyFoundFunction(isCirculationPolicyNotFound)-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> 
                        <name>Check In Circulation Policy Set Daily Fine</name>
                        <oleProposition> 
                            <type>compound</type>
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>FACULTY</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>STAFF</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>GRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>UGRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SPOUSE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>OTHER</name>
                                        </value>                                       
                                    </values>
                                </simpleProposition>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>PALCI</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LAPTOP</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LAP_ACCESS</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>AUDIO</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>AV-EQUIP</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>AV-MISC</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CD-AUDIO</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CD-INFO</name>
                                        </value>                                       
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>DVD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>FILM</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VIDEO</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VIDEO-ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VIDEOGUIDE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VID-PLAYER</name>
                                        </value>                                        
                                    </values>
                                </simpleProposition>                                
                            </compoundProposition>
                        </oleProposition>
                        <trueActions>
                            <action> <!--then CircPolicyFound=true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <rule> 
                                <name>OverdueFineCalculation Daily Fine</name>
                                <oleProposition> <!--if today >=itemDueDate-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <function>currentDateFunction</function>
                                        <term>
                                            <type>java.util.Date</type>
                                            <value>itemDueDate</value>
                                        </term>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions>
                                   
                                            <action> 
                                                <name>overdueFine</name>
                                                <parameter>
                                                    <name>overdueFine</name>
                                                    <value>1/D</value>
                                                </parameter>
                                            </action>
                                            <action> 
                                                <name>maxFine</name>
                                                <parameter>
                                                    <name>maxFine</name>
                                                    <value>100</value>
                                                </parameter>
                                            </action>
                                       
                                </trueActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Checkin Policy not found; if isCircPolicyNotFound, then send a message-->
                <name>Check in Circulation Policy Not Found</name>
                <oleProposition>
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>There is no circulation (Checkin) rule for this combination.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
        </rules>
    </agenda>
    <agenda> <!--Request Validation:  contains the policies for Requests-->
        <name>Request Validation</name>
        <rules>
            <rule> <!--RequestApproval; This rule checks whether request type id is Page/DeliveryRequest,Page/HoldRequest,CopyRequest-->
                <name>RequestApproval</name>
                <oleProposition> <!--if RequestType in Page/DeliveryRequest,Page/HoldRequest,CopyRequest, route to peopleflow-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>requestType</value>
                        </term>
                        <operator>IN</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>Page/Delivery Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Page/Hold Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Copy Request</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> <!--RouteToPeopleFlow: the predefined peopleFlow is called RequestApproval-->
                    <action>
                        <name>Route to PeopleFlow</name>
                        <parameter>
                            <name>Route to PeopleFlow</name>
                            <value>Request Approval</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--RecallCheck; This rule checks whether request type is Recall/DeliveryRequest,Recall/HoldRequest-->
                <name>RecallCheck</name>
                <oleProposition> <!--if RequestType in Recall/DeliveryRequest,Recall/HoldRequest, generateNotice = RecallNotice-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>requestType</value>
                        </term>
                        <operator>IN</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>Recall/Delivery Request</name>
                            </value>
                            <value>
                                <type>java.lang.String</type>
                                <name>Recall/Hold Request</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <action> <!--set generateNotice=RecallNotice-->
                        <name>generateNotice</name>
                        <parameter>
                            <name>generateNotice</name>
                            <value>RecallNotice</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--ValidationRequestPolicySet1:-->
                <name>Circulation Policy Set 1 Validation for Request</name>
                <oleProposition> <!--set isCircPolicyNotFound-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>  <!--then run the real rules for the policy-->
                    <rule> 
                        <name>Circulation Policy Set 1 Validation for Request</name>
                    <oleProposition> <!--check borrowerType, itemType, and itemLibrary-->
                        <type>compound</type>
                        <compoundProposition>
                            <operator>AND</operator>
                            <simpleProposition> 
                                <term>
                                    <type>java.lang.String</type>
                                    <value>borrowerType</value>
                                </term>
                                <operator>IN</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>FACULTY</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>STAFF</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>GRAD</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>UGRAD</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>SPOUSE</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>OTHER</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>LIBRARYUSE</name>
                                    </value>
                                </values>
                            </simpleProposition>
                            <simpleProposition> 
                                <term>
                                    <type>java.lang.String</type>
                                    <value>itemType</value>
                                </term>
                                <operator>IN</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>BOOK</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>BOOK_ZML</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>SCORE_ZML</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>CHAMBERZML</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>PALCI</name>
                                    </value>
                                </values>
                            </simpleProposition>
                            
                        </compoundProposition>
                    </oleProposition>
                        <trueActions> 
                            <action> 
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <action> <!--requestExpirationDay: requestExpirationDay=10-->
                                <name>requestExpirationDay</name>
                                <parameter>
                                    <name>requestExpirationDay</name>
                                    <value>3</value>
                                </parameter>
                            </action>
                            <rule> <!--MaxNumberOfRecallRequest: if requestType in (Recall/Hold, Recall/Deliver) AND maxNumberOfRecallRequest > 2, display message that max number of holds exceeded-->
                                <name>MaxNumberOfRecallRequestAndRecallDueDateCheck</name>
                                <oleProposition> <!--if requestType in (Recall/Hold, Recall/Deliver)-->
                                    <type>simple</type>
                                    <simpleProposition>
                                        <term>
                                            <type>java.lang.String</type>
                                            <value>requestType</value>
                                        </term>
                                        <operator>IN</operator>
                                        <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>Recall/Hold Request</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>Recall/Delivery Request</name>
                                            </value>
                                        </values>
                                    </simpleProposition>
                                </oleProposition>
                                <trueActions> 
                                    <action> 
                                        <name>recallDueDate</name>
                                        <parameter>
                                            <name>minimumLoanPeriod</name>
                                            <value>1-H</value>
                                        </parameter>
                                        <parameter>
                                            <name>recallLoanPeriod</name>
                                            <value>2-D</value>
                                        </parameter>
                                    </action>
                                    <rule> 
                                        <name>MaxNumberOfRecallRequest</name>
                                        <oleProposition> 
                                            <type>simple</type>
                                            <simpleProposition>
                                                <term>
                                                    <type>java.lang.Integer</type>
                                                    <value>maxNumberOfRecallRequest</value>
                                                </term>
                                                <operator>greaterThan</operator>
                                                <values>
                                                    <value>
                                                        <type>java.lang.Integer</type>
                                                        <name>100</name>
                                                    </value>
                                                </values>
                                            </simpleProposition>
                                        </oleProposition>
                                        <trueActions> <!--display error-->
                                            <action>
                                                <name>errorAction</name>
                                                <parameter>
                                                    <name>errorMessage</name>
                                                    <value>The item has the Maximum number of Recall Requests (2)</value>
                                                </parameter>
                                            </action>
                                        </trueActions>
                                    </rule>
                                </trueActions>
                            </rule>
                            <rule> <!--MaxNumberOfHoldRequest-->
                                <name>MaxNumberOfHoldRequest</name>
                                <oleProposition> 
                                    <type>compound</type>
                                    <compoundProposition>
                                        <operator>AND</operator>
                                        <simpleProposition> 
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>requestType</value>
                                            </term>
                                            <operator>IN</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>Hold/Hold Request</name>
                                                </value>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>Hold/Delivery Request</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition> 
                                            <term>
                                                <type>java.lang.Integer</type>
                                                <value>maxNumberOfHoldRequest</value>
                                            </term>
                                            <operator>greaterThan</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.Integer</type>
                                                    <name>100</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                    </compoundProposition>
                                </oleProposition>
                                <trueActions>
                                    <action> 
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Hold Requests exceeds the maximum (2).</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--MaxNumberOfPageRequest:-->
                                <name>MaxNumberOfPageRequest</name>
                                <oleProposition> 
                                    <type>compound</type>
                                    <compoundProposition>
                                        <operator>AND</operator>
                                        <simpleProposition> 
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>requestType</value>
                                            </term>
                                            <operator>IN</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>Page/Hold Request</name>
                                                </value>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>Page/Delivery Request</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition> 
                                            <term>
                                                <type>java.lang.Integer</type>
                                                <value>maxNumberOfPageRequest</value>
                                            </term>
                                            <operator>greaterThan</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.Integer</type>
                                                    <name>100</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                    </compoundProposition>
                                </oleProposition>
                                <trueActions>
                                    <action>
                                        <name>errorAction</name>
                                        <parameter>
                                            <name>errorMessage</name>
                                            <value>Page requests exceed the maximum (2).</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--if isCircPolicyNotFound, display the message-->
                <name>Request Circulation Policy Not Found</name>
                <oleProposition>
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>There is no circulation rule for this combination.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
        </rules>
    </agenda>
    <agenda> <!--The agenda 'Notice Validation' Contains the policies for notices-->
        <name>Notice Validation</name>
        <rules>
            <rule>  <!--CourtesyNoticeCheck: if dueDateDiffInterval=configurableInterval, then set generateNotice=CourtesyNotice-->
                <name>Courtesy Notice Check</name>
                <oleProposition>
                    <type>simple</type>
                    <simpleProposition> <!--if dueDateDiffInterval=configurableInterval-->
                        <term>
                            <type>java.lang.Integer</type>
                            <value>dueDateDiffInterval</value>
                        </term>
                        <operator>=</operator>
                        <term>
                            <type>java.lang.Integer</type>
                            <value>configurableInterval</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <action> <!--set generateNotice=CourtesyNotice-->
                        <name>generateNotice</name>
                        <parameter>
                            <name>generateNotice</name>
                            <value>CourtesyNotice</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Notice Validation Policy Set 1: If if circPolicyFound function isCircPolicyNotFound, Then (if borrowtype in (#) and itemtype in (#) and itemlocation in (#), then (set policyfound = true) AND (check holdNotice) AND (check overdueNotice))-->
                <name>Circulation Policy Set 1 Validation for Notice</name>
                <oleProposition> <!--if circPolicyFound function isCircPolicyNotFound-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--NoticeCircPolicySet1: if borrowtype in (#) and itemtype in (#) and itemlocation in (#), then (set policyfound = true) AND (check holdNotice) AND (check overdueNotice)-->
                        <name>Notice Circulation Policy Set 1</name>
                        <oleProposition> 
                            <type>compound</type>
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>FACULTY</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>STAFF</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>GRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>UGRAD</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>SPOUSE</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>OTHER</name>
                                            </value>
                                            <value>
                                                <type>java.lang.String</type>
                                                <name>LIBRARYUSE</name>
                                            </value>
                                    </values>
                                </simpleProposition>
                                
                                <simpleProposition> 
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOK_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CHAMBERZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SCORE_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CURRICULUM</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>EREADACCESS</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>EREADER</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>JUVENILE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LEISURE-RD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>TABLET</name>
                                        </value>

                                    </values>
                                </simpleProposition>

                            </compoundProposition>
                        </oleProposition>
                        <trueActions>
                            <action> <!--set circulationPolicyFound to true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <rule> <!--Hold Courtesy Notice Check: if (itemStatus = ONHOLD  AND numberOfDaysOnHold>max#ofDaysOnHold), then generateNotice = HoldCourtesyNotice-->
                                <name>Hold Courtesy Notice Check</name>
                                <oleProposition> <!--if (itemStatus = ONHOLD  AND numberOfDaysOnHold>max#ofDaysOnHold)-->
                                    <type>compound</type>
                                    <compoundProposition>
                                        <operator>AND</operator>
                                        <simpleProposition> <!--if itemStatus = ONHOLD-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>itemStatus</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>ONHOLD</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition> <!--if numberOfDaysOnHold>max#ofDaysOnHold-->
                                            <term>
                                                <type>java.lang.Integer</type>
                                                <value>numberOfDaysOnHold</value>
                                            </term>
                                            <operator>greaterThan</operator>
                                            <term>
                                                <type>java.lang.Integer</type>
                                                <value>maxNumberOfDaysOnHold</value>
                                            </term>
                                        </simpleProposition>
                                    </compoundProposition>
                                </oleProposition>
                                <trueActions>
                                    <action> <!--GenerateNotice: then generateNotice = HoldCourtesyNotice-->
                                        <name>generateNotice</name>
                                        <parameter>
                                            <name>generateNotice</name>
                                            <value>HoldCourtesyNotice</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule> <!--OverdueNoticeCheck: if (claimsReturned=true OR replacementFeePatronBill in true) then do nothing, Else (if numberOfOverdueSent < max, then (if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice), Else set updateItemStatus=LOST)-->
                                <name>OverdueNotice Check</name>
                                <oleProposition>
                                    <type>compound</type>
                                    <compoundProposition>
                                       <operator>AND</operator>
                                        <simpleProposition> <!--if claimsReturned=true-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>claimsReturned</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>false</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition> <!--if replacementFeePatronBill in true-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>replacementFeePatronBill</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>false</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                    </compoundProposition>
                                </oleProposition>
                                <trueActions>
                                    <rule> <!--MaxNumberOfOverDueNotices: if numberOfOverdueSent < 3, then (if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice), Else set updateItemStatus=LOST-->
                                        <name>MaxNumberOfOverDueNotices</name>
                                        <oleProposition> 
                                            <type>simple</type>
                                            <simpleProposition>
                                                <term>
                                                    <type>java.lang.Integer</type>
                                                    <value>numberOfOverdueSent</value>
                                                </term>
                                                <operator>lessThan</operator>
                                                <values>
                                                    <value>
                                                        <type>java.lang.Integer</type>
                                                        <name>3</name>
                                                    </value>
                                                </values>
                                            </simpleProposition>
                                        </oleProposition>
                                        <trueActions>
                                            <rule> <!--CheckDueDateWithInterval: if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice-->
                                                <name>CheckDueDateWithInterval</name>
                                                <oleProposition> <!--if dueDateSumInterval>=intervalWithNoticeCount-->
                                                    <type>compound</type>
                                                    <compoundProposition>
                                                        <operator>OR</operator>
                                                        <simpleProposition>
                                                            <term>
                                                                <type>java.lang.Integer</type>
                                                                <value>dueDateSumInterval</value>
                                                            </term>
                                                            <operator>greaterThan</operator>
                                                            <values>
                                                                <value>
                                                                    <type>java.lang.Integer</type>
                                                                    <name>7</name>
                                                                </value>
                                                            </values>
                                                        </simpleProposition>
                                                        <simpleProposition>
                                                            <term>
                                                                <type>java.lang.Integer</type>
                                                                <value>dueDateSumInterval</value>
                                                            </term>
                                                            <operator>=</operator>
                                                            <values>
                                                                <value>
                                                                    <type>java.lang.Integer</type>
                                                                    <name>7</name>
                                                                </value>
                                                            </values>
                                                        </simpleProposition>
                                                    </compoundProposition>
                                                </oleProposition>
                                                <trueActions> <!--generateNotice: set generateNotice=OverDueNotice-->
                                                    <action>
                                                        <name>generateNotice</name>
                                                        <parameter>
                                                            <name>generateNotice</name>
                                                            <value>OverdueNotice</value>
                                                        </parameter>
                                                    </action>
                                                </trueActions>
                                            </rule>
                                        </trueActions>
                                        <!-- <falseActions> -->
                                        <!--updateItemStatus: set updateItemStatus=LOST AND set replacementBill=100 -->
                                        <!-- Per Access Service Request, Not to create replacement bills and update lost item status
                                            <action>
                                                <name>replacementBill</name>
                                                <parameter>
                                                    <name>replacementBill</name>
                                                    <value>100</value>
                                                </parameter>
                                            </action>                                            
                                            <action>
                                                <name>updateItemStatus</name>
                                                <parameter>
                                                    <name>updateItemStatus</name>
                                                    <value>LOST</value>
                                                </parameter>
                                            </action>
                                            -->
                                       <!-- </falseActions> -->
                                    </rule>
                                </trueActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Notice Validation Policy Set 2: If if circPolicyFound function isCircPolicyNotFound, Then (if borrowtype in (#) and itemtype in (#) and itemlocation in (#), then (set policyfound = true) AND (check holdNotice) AND (check overdueNotice))-->
                <name>Circulation Policy Set 2 Validation for Notice</name>
                <oleProposition> <!--if circPolicyFound function isCircPolicyNotFound-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule>
                        <!--NoticeCircPolicySet1: if borrowtype in (#) and itemtype in (#) and itemlocation in (short term loans), then (set policyfound = true) AND (check holdNotice) AND (check overdueNotice)-->
                        <name>Notice Circulation Policy Set 2</name>
                        <oleProposition>
                            <type>compound</type>
                            <compoundProposition>
                                <operator>AND</operator>
                                <simpleProposition>
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>borrowerType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>FACULTY</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>STAFF</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>GRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>UGRAD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SPOUSE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>OTHER</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LIBRARYUSE</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                                <simpleProposition>
                                    <term>
                                        <type>java.lang.String</type>
                                        <value>itemType</value>
                                    </term>
                                    <operator>IN</operator>
                                    <values>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>2-HOUR-RSV</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>4-HOUR-RSV</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>1-DAY-RSV</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>2-DAY-RSV</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>7-DAY-RSV</name>
                                        </value>     
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>AUDIO</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>BOOKWARE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CD-AUDIO</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>CD-INFO</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>DVD</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>FILM</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>SOFTWARE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VIDEO</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VIDEO_ZML</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VIDEOGUIDE</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>KEY</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LAP_ACCESS</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>LAPTOP</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>AV-MISC</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>AV-EQUIP</name>
                                        </value>
                                        <value>
                                            <type>java.lang.String</type>
                                            <name>VID-PLAYER</name>
                                        </value>
                                    </values>
                                </simpleProposition>
                            </compoundProposition>
                        </oleProposition>
                        <trueActions>
                            <action>
                                <!--set circulationPolicyFound to true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <rule>
                                <!--Hold Courtesy Notice Check: if (itemStatus = ONHOLD  AND numberOfDaysOnHold>max#ofDaysOnHold), then generateNotice = HoldCourtesyNotice-->
                                <name>Hold Courtesy Notice Check 2</name>
                                <oleProposition>
                                    <!--if (itemStatus = ONHOLD  AND numberOfDaysOnHold>max#ofDaysOnHold)-->
                                    <type>compound</type>
                                    <compoundProposition>
                                        <operator>AND</operator>
                                        <simpleProposition>
                                            <!--if itemStatus = ONHOLD-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>itemStatus</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                  <type>java.lang.String</type>
                                                  <name>ONHOLD</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition>
                                            <!--if numberOfDaysOnHold>max#ofDaysOnHold-->
                                            <term>
                                                <type>java.lang.Integer</type>
                                                <value>numberOfDaysOnHold</value>
                                            </term>
                                            <operator>greaterThan</operator>
                                            <term>
                                                <type>java.lang.Integer</type>
                                                <value>maxNumberOfDaysOnHold</value>
                                            </term>
                                        </simpleProposition>
                                    </compoundProposition>
                                </oleProposition>
                                <trueActions>
                                    <action>
                                        <!--GenerateNotice: then generateNotice = HoldCourtesyNotice-->
                                        <name>generateNotice</name>
                                        <parameter>
                                            <name>generateNotice</name>
                                            <value>HoldCourtesyNotice</value>
                                        </parameter>
                                    </action>
                                </trueActions>
                            </rule>
                            <rule>
                                <!--OverdueNoticeCheck: if (claimsReturned=true OR replacementFeePatronBill in true) then do nothing, Else (if numberOfOverdueSent < max, then (if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice), Else set updateItemStatus=LOST)-->
                                <name>OverdueNotice Check 2</name>
                                <oleProposition>
                                    <type>compound</type>
                                    <compoundProposition>
                                        <operator>AND</operator>
                                        <simpleProposition>
                                            <!--if claimsReturned=true-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>claimsReturned</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                  <type>java.lang.String</type>
                                                  <name>false</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition>
                                            <!--if replacementFeePatronBill in true-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>replacementFeePatronBill</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                  <type>java.lang.String</type>
                                                  <name>false</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                    </compoundProposition>
                                </oleProposition>
                                <trueActions>
                                    <rule>
                                        <!--MaxNumberOfOverDueNotices: if numberOfOverdueSent < 3, then (if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice), Else set updateItemStatus=LOST-->
                                        <name>MaxNumberOfOverDueNotices 2</name>
                                        <oleProposition>
                                            <type>simple</type>
                                            <simpleProposition>
                                                <term>
                                                  <type>java.lang.Integer</type>
                                                  <value>numberOfOverdueSent</value>
                                                </term>
                                                <operator>lessThan</operator>
                                                <values>
                                                  <value>
                                                  <type>java.lang.Integer</type>
                                                  <name>3</name>
                                                  </value>
                                                </values>
                                            </simpleProposition>
                                        </oleProposition>
                                        <trueActions>
                                            <rule>
                                                <!--CheckDueDateWithInterval: if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice-->
                                                <name>CheckDueDateWithInterval 2</name>
                                                <oleProposition>
                                                  <!--if dueDateSumInterval>=intervalWithNoticeCount-->
                                                  <type>compound</type>
                                                  <compoundProposition>
                                                  <operator>OR</operator>
                                                  <simpleProposition>
                                                  <term>
                                                  <type>java.lang.Integer</type>
                                                  <value>dueDateSumInterval</value>
                                                  </term>
                                                  <operator>greaterThan</operator>
                                                  <values>
                                                  <value>
                                                  <type>java.lang.Integer</type>
                                                  <name>3</name>
                                                  </value>
                                                  </values>
                                                  </simpleProposition>
                                                  <simpleProposition>
                                                  <term>
                                                  <type>java.lang.Integer</type>
                                                  <value>dueDateSumInterval</value>
                                                  </term>
                                                  <operator>=</operator>
                                                  <values>
                                                  <value>
                                                  <type>java.lang.Integer</type>
                                                  <name>3</name>
                                                  </value>
                                                  </values>
                                                  </simpleProposition>
                                                  </compoundProposition>
                                                </oleProposition>
                                                <trueActions>
                                                  <!--generateNotice: set generateNotice=OverDueNotice-->
                                                  <action>
                                                  <name>generateNotice</name>
                                                  <parameter>
                                                  <name>generateNotice</name>
                                                  <value>OverdueNotice</value>
                                                  </parameter>
                                                  </action>
                                                </trueActions>
                                            </rule>
                                        </trueActions>
                                        <falseActions>
                                            <!--updateItemStatus: set updateItemStatus=LOST AND set replacementBill=100 -->
                                            <action>
                                                <name>replacementBill</name>
                                                <parameter>
                                                  <name>replacementBill</name>
                                                  <value>100</value>
                                                </parameter>
                                            </action>
                                            <action>
                                                <name>updateItemStatus</name>
                                                <parameter>
                                                  <name>updateItemStatus</name>
                                                  <value>LOST</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </trueActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
            <rule> <!--Notice Validation Policy Set #: If requestType = recall/hold or recall/delivery, then -->
                <name>Circulation Policy Set Recall Validation for Notice</name>
                <oleProposition> <!--if circPolicyFound function isCircPolicyNotFound-->
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <rule>
                        <name>Circulation Notice Policy for Recalled Items</name>
                        <oleProposition> 
                            <type>simple</type>
                            <simpleProposition><!-- if requestType in (recall/hold, recall/delivery) -->
                                <term>
                                    <type>java.lang.String</type>
                                    <value>requestType</value>
                                </term>
                                <operator>IN</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>Recall/Hold Request</name>
                                    </value>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>Recall/Delivery Request</name>
                                    </value>				
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions>
                            <action> <!--set circulationPolicyFound to true-->
                                <name>circulationPolicyFound</name>
                                <parameter>
                                    <name>circulationPolicyFound</name>
                                    <value>true</value>
                                </parameter>
                            </action>
                            <rule> <!-- check to see that there are no claims returned or replacement bill for the item-->
                                <name>RecallClaimsReturnedCheck</name>
                                <oleProposition>
                                    <type>compound</type>
                                    <compoundProposition>
                                        <operator>AND</operator>
                                        <simpleProposition> <!--if claimsReturned=false-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>claimsReturned</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>false</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                        <simpleProposition> <!--if replacementFeePatronBill is false-->
                                            <term>
                                                <type>java.lang.String</type>
                                                <value>replacementFeePatronBill</value>
                                            </term>
                                            <operator>=</operator>
                                            <values>
                                                <value>
                                                    <type>java.lang.String</type>
                                                    <name>false</name>
                                                </value>
                                            </values>
                                        </simpleProposition>
                                    </compoundProposition>
                                </oleProposition>
                                <trueActions>
                                    <!-- check to see if the max number of overdue notices is equal to or less than some number. -->
                                    <rule> <!--MaxNumberOfOverDueNotices: if numberOfOverdueSent < 3, then (if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice), Else set updateItemStatus=LOST-->
                                        <name>MaxNumberOfOverDueNoticesRecall</name>
                                        <oleProposition> <!--if numberOfOverdueSent < 3-->
                                            <type>simple</type>
                                            <simpleProposition>
                                                <term>
                                                    <type>java.lang.Integer</type>
                                                    <value>numberOfOverdueSent</value>
                                                </term>
                                                <operator>lessThan</operator>
                                                <values>
                                                    <value>
                                                        <type>java.lang.Integer</type>
                                                        <name>3</name>
                                                    </value>
                                                </values>
                                            </simpleProposition>
                                        </oleProposition>
                                        <trueActions>
                                            <rule> <!--CheckDueDateWithInterval: if dueDateSumInterval=intervalWithNoticeCount, then set generateNotice=OverDueNotice-->
                                                <name>CheckDueDateWithIntervalRecall</name>
                                                <oleProposition> <!--if dueDateSumInterval>=intervalWithNoticeCount-->
                                                    <type>compound</type>
                                                    <compoundProposition>
                                                        <operator>OR</operator>
                                                        <simpleProposition>
                                                            <term>
                                                                <type>java.lang.Integer</type>
                                                                <value>dueDateSumInterval</value>
                                                            </term>
                                                            <operator>greaterThan</operator>
                                                            <values>
                                                                <value>
                                                                    <type>java.lang.Integer</type>
                                                                    <name>7</name>
                                                                </value>
                                                            </values>
                                                        </simpleProposition>
                                                        <simpleProposition>
                                                            <term>
                                                                <type>java.lang.Integer</type>
                                                                <value>dueDateSumInterval</value>
                                                            </term>
                                                            <operator>=</operator>
                                                            <values>
                                                                <value>
                                                                    <type>java.lang.Integer</type>
                                                                    <name>7</name>
                                                                </value>
                                                            </values>
                                                        </simpleProposition>
                                                    </compoundProposition>
                                                </oleProposition>
                                                <trueActions> <!--generateNotice: set generateNotice=OverDueNotice-->
                                                    <action>
                                                        <name>generateNotice</name>
                                                        <parameter>
                                                            <name>generateNotice</name>
                                                            <value>OverdueNotice</value>
                                                        </parameter>
                                                    </action>
                                                </trueActions>
                                            </rule>
                                        </trueActions>
                                        <falseActions> <!--updateItemStatus: set updateItemStatus=LOST AND set replacementBill=100 -->
                                            <action>
                                                <name>replacementBill</name>
                                                <parameter>
                                                    <name>replacementBill</name>
                                                    <value>100</value>
                                                </parameter>
                                            </action>
                                            <action>
                                                <name>updateItemStatus</name>
                                                <parameter>
                                                    <name>updateItemStatus</name>
                                                    <value>LOST</value>
                                                </parameter>
                                            </action>
                                        </falseActions>
                                    </rule>
                                </trueActions>
                            </rule>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>	
            <rule> <!--Policy Not found-->
                <name>Notice Circulation Policy Not Found</name>
                <oleProposition>
                    <type>simple</type>
                    <simpleProposition>
                        <function>circulationPolicyFoundFunction</function>
                        <term>
                            <type>java.lang.String</type>
                            <value>patronId</value>
                        </term>
                        <term>
                            <type>java.lang.String</type>
                            <value>itemId</value>
                        </term>
                    </simpleProposition>
                </oleProposition>
                <trueActions>
                    <action>
                        <name>errorAction</name>
                        <parameter>
                            <name>errorMessage</name>
                            <value>There is no circulation rule for this combination.</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
        </rules>
    </agenda>
    <agenda> <!--'Batch Program Agenda' includes  TemporaryHistoryRecordDelete and Notice Type Check; noticeTypecheck is only for select borrowerTypes and select circdesks-->
        <name>Batch Program Agenda</name>
        <rules>
            <rule> <!--TemporaryHistoryRecordDelete:  if isTemporaryHistoryRecord=true, then deleteTemporaryHistoryRecord=max (maximum number of days to keep temporary history record; whether to delete temporary history record or not based on maxdays-->
                <name>TemporaryHistoryRecordDelete</name>
                <oleProposition> <!--if isTemporaryHistoryRecord=true-->
                    <type>simple</type>
                    <simpleProposition>
                        <term>
                            <type>java.lang.String</type>
                            <value>isTemporaryHistoryRecord</value>
                        </term>
                        <operator>=</operator>
                        <values>
                            <value>
                                <type>java.lang.String</type>
                                <name>true</name>
                            </value>
                        </values>
                    </simpleProposition>
                </oleProposition>
                <trueActions> 
                    <action>
                        <name>deleteTemporaryHistoryRecord</name>
                        <parameter>
                            <name>deleteTemporaryHistoryRecord</name>
                            <value>7-D</value>
                        </parameter>
                    </action>
                </trueActions>
            </rule>
            <rule> <!--Notice Type Check: l-->
                <name>Notice Type Check</name> <!-- This rule  can be used to override the message type of mail or email set in the OLE_DLVR parameters-->
                <oleProposition>
                    <type>compound</type>
                    <compoundProposition> 
                        <operator>AND</operator>
                        <simpleProposition> 
                            <term>
                                <type>java.lang.String</type>
                                <value>borrowerType</value>
                            </term>
                            <operator>IN</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>FACULTY</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>STAFF</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>GRAD</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>UGRAD</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>SPOUSE</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>OTHER</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>LIBRARYUSE</name>
                                </value>
                            </values>
                        </simpleProposition>
                        <simpleProposition> 
                            <term>
                                <type>java.lang.String</type>
                                <value>itemType</value>
                            </term>
                            <operator>IN</operator>
                            <values>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>BOOK</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>BOOK_ZML</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>CHAMBERZML</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>SCORE_ZML</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>CURRICULUM</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>EREADACCESS</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>EREADER</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>JUVENILE</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>LEISURE-RD</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>TABLET</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>2-HOUR-RSV</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>4-HOUR-RSV</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>1-DAY-RSV</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>2-DAY-RSV</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>7-DAY-RSV</name>
                                </value>     
                                <value>
                                    <type>java.lang.String</type>
                                    <name>AUDIO</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>BOOKWARE</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>CD-AUDIO</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>CD-INFO</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>DVD</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>FILM</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>SOFTWARE</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>VIDEO</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>VIDEO_ZML</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>VIDEOGUIDE</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>KEY</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>LAP_ACCESS</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>LAPTOP</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>AV-MISC</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>AV-EQUIP</name>
                                </value>
                                <value>
                                    <type>java.lang.String</type>
                                    <name>VID-PLAYER</name>
                                </value>
                            </values>
                        </simpleProposition>
                    </compoundProposition>
                </oleProposition>
                <trueActions>
                    <rule> <!--emailForOverdueNotice: if notice=overdueNotice, set noticeType email-->
                        <name>email for overdue notice</name>
                        <oleProposition> <!--if notice=overdueNotice-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>notice</value>
                                </term>
                                <operator>=</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>OverdueNotice</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions>
                            <action> <!--noticeType: set noticeType email-->
                                <name>noticeType</name>
                                <parameter>
                                    <name>noticeType</name>
                                    <value>email</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                    <rule> 
                        <name>email for courtesy notice</name>
                        <oleProposition> <!--if notice=courtesy-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>notice</value>
                                </term>
                                <operator>=</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>CourtesyNotice</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions>
                            <action>
                                <name>noticeType</name>
                                <parameter>
                                    <name>noticeType</name>
                                    <value>email</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                    <rule> 
                        <name>email for holdCourtesy notice</name>
                        <oleProposition> <!--if notice=HoldCourtesyNotice-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>notice</value>
                                </term>
                                <operator>=</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>HoldCourtesyNotice</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--set noticeType=mail-->
                            <action>
                                <name>noticeType</name>
                                <parameter>
                                    <name>noticeType</name>
                                    <value>email</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                    <rule> <!--mail for OnHoldNotice notice:l-->
                        <name>mail for OnHoldNotice notice</name>
                        <oleProposition> <!--if notice=OnHoldNotice-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>notice</value>
                                </term>
                                <operator>=</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>OnHoldNotice</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--set noticeType=mail-->
                            <action>
                                <name>noticeType</name>
                                <parameter>
                                    <name>noticeType</name>
                                    <value>email</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                    <rule> <!--email for ExpiredRequestNotice notice-->
                        <name>mail for ExpiredRequestNotice notice</name>
                        <oleProposition> <!--if notice=ExpiredRequestNotice-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>notice</value>
                                </term>
                                <operator>=</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>ExpiredRequestNotice</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--set noticeType=mail-->
                            <action>
                                <name>noticeType</name>
                                <parameter>
                                    <name>noticeType</name>
                                    <value>email</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                    <rule> <!--mail for RecallNotice notice: Per Mark Request -->
                        <name>mail for RecallNotice notice</name>
                        <oleProposition> <!--if notice=RecallNotice-->
                            <type>simple</type>
                            <simpleProposition>
                                <term>
                                    <type>java.lang.String</type>
                                    <value>notice</value>
                                </term>
                                <operator>=</operator>
                                <values>
                                    <value>
                                        <type>java.lang.String</type>
                                        <name>RecallNotice</name>
                                    </value>
                                </values>
                            </simpleProposition>
                        </oleProposition>
                        <trueActions> <!--set noticeType=mail-->
                            <action>
                                <name>noticeType</name>
                                <parameter>
                                    <name>noticeType</name>
                                    <value>mail</value>
                                </parameter>
                            </action>
                        </trueActions>
                    </rule>
                </trueActions>
            </rule>
        </rules>
    </agenda>
</agendas>

